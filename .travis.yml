language: rust
sudo: true
cache:
  timeout: 1024
  directories:
    - $HOME/.cargo

env:
  global:
    - RUST_BACKTRACE=full
    - TEST_SUITE_COMMIT=4fe8219308a28f8b31910bad5ae14a5acdb396a2

matrix:
  include:
    - os: osx
      rust: 1.41.0
      install:
        - cargo fmt --version || rustup component add rustfmt-preview
        - cargo clippy --version || rustup component add clippy-preview
      env: SUITE=ci
    - rust: 1.41.0
      addons:
        apt:
          packages:
            - git
            - autoconf
            - flex
            - bison
            - texinfo
            - libtool
      env: SUITE=ci-quick
    - rust: 1.41.0
      addons:
        apt:
          packages:
            - git
            - build-essential
      env: SUITE=ci-generated
    - rust: 1.41.0
      addons:
        apt:
          packages:
            - git
            - build-essential
      env: SUITE=check
    - rust: 1.41.0
      addons:
        apt:
          packages:
            - git
            - build-essential
      env: SUITE=ci-all-features
    - os: osx
      rust: 1.41.0
      addons:
        apt:
          packages:
            - git
            - build-essential
      env: SUITE=ci-all-features
    - name: Test Suite
      rust: 1.41.0
      dist: xenial
      addons:
        apt:
          packages:
            - git
            - build-essential
            - autoconf
            - automake
            - autotools-dev
            - libmpc-dev
            - libmpfr-dev
            - libgmp-dev
            - gawk
            - libtool
            - patchutils
            - libexpat-dev
            - zlib1g-dev
      script:
        git clone --recursive https://github.com/nervosnetwork/ckb-vm-test-suite &&
        ln -snf .. ckb-vm-test-suite/ckb-vm &&
        docker run --rm -v `pwd`:/code xxuejie/riscv-gnu-toolchain-rv64imac:xenial-20190606 cp -r /riscv /code/riscv &&
        cd ckb-vm-test-suite && git checkout $TEST_SUITE_COMMIT &&
        RISCV=`pwd`/../riscv ./test.sh
    - name: Fuzz
      dist: bionic
      script:
        - rustup install nightly
        - cargo +nightly install cargo-fuzz
        - make fuzz
    - name: Code Coverage
      if: 'tag IS NOT present AND type != pull_request AND (branch = develop OR branch = master)'
      rust: 1.41.0
      dist: xenial
      addons:
        apt:
          packages:
            - git
            - build-essential
            - autoconf
            - automake
            - autotools-dev
            - libmpc-dev
            - libmpfr-dev
            - libgmp-dev
            - gawk
            - libtool
            - patchutils
            - libexpat-dev
            - binutils-dev
            - libcurl4-openssl-dev
            - zlib1g-dev
            - libdw-dev
            - libiberty-dev
      script:
        wget https://github.com/SimonKagstrom/kcov/archive/v36.tar.gz &&
        tar xzf v36.tar.gz &&
        cd kcov-36 &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-36 v36.tar.gz &&
        git clone --recursive https://github.com/nervosnetwork/ckb-vm-test-suite &&
        ln -snf .. ckb-vm-test-suite/ckb-vm &&
        docker run --rm -v `pwd`:/code xxuejie/riscv-gnu-toolchain-rv64imac:xenial-20190606 cp -r /riscv /code/riscv &&
        cd ckb-vm-test-suite && git checkout $TEST_SUITE_COMMIT &&
        RISCV=`pwd`/../riscv ./test.sh --coverage &&
        cd .. &&
        make cov &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
script:
- make "$SUITE"

before_cache:
- rm -rf $HOME/.cargo/registry
